name: build
on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
#  schedule:
#    - cron: '0 16 * * 0' # sunday 16:00

# Actions
# shivammathur/setup-php - https://github.com/marketplace/actions/setup-php-action
# sudo-bot/action-scrutinizer - https://github.com/marketplace/actions/action-scrutinizer

jobs:
  phpcs:
    name: Coding standards (phpcs)
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: cs2pr, phpcs
        env:
          fail-fast: true
      - name: Coding standards (phpcs)
        run: phpcs -q --report=checkstyle | cs2pr

  php-cs-fixer:
    name: Coding standards (php-cs-fixer)
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: cs2pr, php-cs-fixer
        env:
          fail-fast: true
      - name: Coding standards (php-cs-fixer)
        run: php-cs-fixer fix --dry-run --format=checkstyle | cs2pr

  phpunit:
    name: Tests on PHP ${{ matrix.php-version }} (phpunit)
    runs-on: "ubuntu-latest"
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server
        ports:
          - 1433/tcp
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password-123456
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -U sa -P $SA_PASSWORD -Q 'SELECT 1' -b -o /dev/null"
          --health-interval 60s
          --health-timeout 30s
          --health-start-period 20s
          --health-retries 3
    strategy:
      matrix:
        php-version: ['7.3', '7.4', '8.0', '8.1', '8.2', '8.3']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0" # required for sudo-bot/action-scrutinizer
      - name: Start MySQL # mysql is already installed on virtual-environments
        run: |
          sudo systemctl start mysql.service
          mysql --host=localhost --user=root --password=root -e \
            "CREATE USER 'admin'@'localhost' IDENTIFIED WITH mysql_native_password BY 'Password-123456' ; GRANT ALL PRIVILEGES ON *.* TO 'admin'@'localhost' ;"
      - name: Update APT repositories
        run: |
          sudo apt-get -yqq update
      - name: Install locales
        run: |
          sudo apt-get -yqq install tzdata locales
          sudo locale-gen en_US.UTF-8 en_US pt_BR
      - name: Set up environment file
        run: |
          test -e tests/.env || cp -v tests/.env.github tests/.env
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo, sqlite3, mysqli, pdo_sqlsrv, pdo_dblib
          coverage: xdebug
          tools: composer:v2
        env:
          fail-fast: true
      - name: Show PHP information
        run: php --info
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-composer-"
      - name: Install project dependencies
        run: composer upgrade --no-interaction --no-progress --prefer-dist
      - name: Tests (phpunit)
        run: vendor/bin/phpunit --testdox --verbose --coverage-clover=build/coverage-clover.xml
        env:
          testMssql_port: ${{ job.services.mssql.ports[1433] }}
          testSqlsrv_port: ${{ job.services.mssql.ports[1433] }}
      - name: Upload code coverage to scrutinizer
        uses: sudo-bot/action-scrutinizer@latest
        with:
          cli-args: "--format=php-clover build/coverage-clover.xml"
        continue-on-error: true

  phpstan:
    name: Static analysis (phpstan)
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: composer:v2, phpstan
        env:
          fail-fast: true
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-composer-"
      - name: Install project dependencies
        run: composer upgrade --no-interaction --no-progress --prefer-dist
      - name: Static analysis (phpstan)
        run: phpstan analyse --no-progress --verbose
